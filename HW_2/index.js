// HW1:
// Есть массив ['Капуста', 'Репа', 'Редиска', 'Морковка']. Надо вывести в консоль строку 'Капуста | Репа | Редиска | Морковка';

let vegetables = ['Капуста', 'Репа', 'Редиска', 'Морковка'];
console.log('First task result: ' + vegetables.join(' | '));

//------------------------------------------------------------------------------------------------------------------------------------
// HW2:
// Есть строка 'Вася;Петя;Вова;Олег'. Используя стандартные методы строк получить массив их имен;

let strNames = 'Вася;Петя;Вова;Олег';
console.log('Second task result: ' + strNames.split(';'));

//------------------------------------------------------------------------------------------------------------------------------------
// HW3:
// Напишите функцию hello2(), которая при вызове будет принимать переменную (в аргументы) name (например, «Василий») и выводить строку (в нашем случае «Привет, Василий»).
// В случае отсутствующего аргумента выводить «Привет, гость»

const hello2 = (name) => {
    return name ? `Hello ${name}` : `Hello, guest`;
};
console.log('Third task result: ' + hello2('Nick'));
console.log('Third task result: ' + hello2());

//------------------------------------------------------------------------------------------------------------------------------------
// HW4:
// Есть массив ['яблоко', 'ананас', 'груша']
// Привести каждый элемент массива в верхний регистр (сделать все слово большими буквами) и получить результат (новый массив) в новую переменную.

let fruits = ['яблоко', 'ананас', 'груша'];
let result = fruits.join(' ').toUpperCase().split(' ');
console.log('Fourth task result: ' + result);

//------------------------------------------------------------------------------------------------------------------------------------
// HW5:
// Написать функцию addOneForAll, которая может принять неограниченное кол-во аргументов.
// Добавить к каждому аргументу 1 и вернуть новый массив с новыми значениями.

function addOneForAll() {
    let res = [...arguments].map((el) => el + 1); // Array.from(arguments);
    return res;
}
console.log('Fifth task result: ' + addOneForAll(1, 2, 3, 5, 6, 7));

//------------------------------------------------------------------------------------------------------------------------------------
// HW6:
// Написать функцию getSum, которая может принять неограниченное кол-во аргументов и возвращает их сумму.
function getSum() {
    return [...arguments].reduce((acc, el) => acc + el);
}
console.log('Sixth task result: ' + getSum(1, 2, 3, 5, 6, 7));

//------------------------------------------------------------------------------------------------------------------------------------
// HW7:
// Есть массив [1, 'hello', 2, 3, 4, '5', '6', 7, null]. Отфильтровать массив так, чтобы остались только числа. Сделать можно любым способом из того, что учили.
let filteredArray = [1, 'hello', 2, 3, 4, '5', '6', 7, null].filter((el) => {
    return typeof el === 'number';
});
console.log('Seventh task result: ' + filteredArray);

//------------------------------------------------------------------------------------------------------------------------------------
// HW8:
// Написать функцию arrayTesting, которая принимает в себя любой массив (в аргументы)
// функция проверяет есть ли в массиве хоть одно true значение
// и если оно есть, то возвращаем из функции строку 'Нашли true значение', если его нет - 'Ничего нет'
function arrayTesting(arr) {
    return arr.some((el) => el === true) ? 'Find true value' : 'Nothing not found';
}
console.log('Eigth task result: ' + arrayTesting([1, 4, 5, 6, 78, 88]));
console.log('Eigth task result: ' + arrayTesting([1, 4, 5, 6, 78, 88, true]));
